

* https://localhost:44325/Home/Index , Home represent HomeContrtoller and Index represent method in class
  we dont write "HomeContrtoller" fullname in url we only write "Home" and "Controller" will get bydefault.

09/09/23 
--------

* Program Flow :
	
	Strat main
    above startup
    after startup
    Strat ConfigureServices
    End ConfigureServices
    configure start
    useendpoint start
    useendpoint end
    configure end
    info: Microsoft.Hosting.Lifetime[0]
          Now listening on: https://localhost:5001
    info: Microsoft.Hosting.Lifetime[0]
          Now listening on: http://localhost:5000
    info: Microsoft.Hosting.Lifetime[0]
          Application started. Press Ctrl+C to shut down.
    info: Microsoft.Hosting.Lifetime[0]
          Hosting environment: Development
    info: Microsoft.Hosting.Lifetime[0]
          Content root path: F:\AspDotNet\WebAppDemo4.0
    MockEmpRepository ctor start
    MockEmpRepository ctor end
    Homecontroller ctor start
    Homecontroller ctor end
    Details
    GetEmployee

* we return view from Details method in Home Controller at that movement when request is go to Details it try to 
  find  " View/Home(Because our Controller name is Home)/Details " and html file in that folder but not found hence it will give exception 

    An unhandled exception occurred while processing the request.
    InvalidOperationException: The view 'Details' was not found. The following locations were searched:
    /Views/Home/Details.cshtml
    /Views/Shared/Details.cshtml
    /Pages/Shared/Details.cshtml

* cshtml for cSharpHtml 

10/9/23
-------

* Customize Views : 
    return View("Test");
    return View("MtViews/Test.cshtml");
    return View("../../MtViews/Test");
    return View("../Test/Update");
    
* ViewData method to return model from controller
    it Did not give error messgae in compile time like spelling mistake in model name


11/09/23
--------

* Layout View
    instead of writing header parts in all files we create layout file eg . _Layout.cshtml( it usually starts with _ indicates not proper file to view)
    and give below location as header

    @{

        Layout = "~/Views/Shared/_Layout.cshtml";
        ViewBag.Title = "Employees";
    }

    above code work as header and rest of the body work as  @RenderBody() in _layout file.

    Cons:
    but this will errutating in some cases when we hav to change the location of file we must reflect that change in all files.

* Section for adding script file 

    @section Scripts {
        <script src="~/js/customscript.js"></script>
    }

* View Starts
    @{
        Layout = "_Layout";
    }

    It's a special file in ASP.NET Core MVC. The code in this file is executed before the code in an individual view is executed. So this means, 
    instead of setting the Layout property in each individual view, we can move that code into the  " _ViewStart.cshtml file. "

    By setting the Layout property in _ViewStart.cshtml file maintaining our application becomes much easier. In the future, if we want to use a 
    different layout file we just need to change the code in one place in _ViewStart.cshtml.

    View starts in hierarchical inner folder can override outside folder file

* view imports
    _ViewImports.cshtml file is usually placed in the Views folder. It is used to include the common namespaces so we do not have to 
    include them in every view that needs those namespaces. 

    @using EmployeeManagement.Models;
    @using EmployeeManagement.ViewModels;

* Null Coalesing operator 

 var id;
 Console.Writeline( id??1 );        if id is null then set 1.

* Routing

    Attribute Routing

    endpoints.MapControllers();

    Attribute Routing Parameters

    [Route("home")]
        [Route("/")]
        [Route("")]
        [Route("index")]

        [Route("details/{id?}")]


    Tokens in Attribute Routing : 
     [Route("[Controller]")]
     [Route("[action]")]
     [Route("[action] / {id?}")]


* Validations

    <div asp-validation-summary="All"> return all validations 

    ASP.NET Core Built-in Model Validation Attributes

    Required	        Specifies the field is required
    Range	            Specifies the minimum and maximum value allowed
    MinLength	        Specifies the minimum length of a string
    MaxLength	        Specifies the maximum length of a string
    Compare	            Compares 2 properties of a model. For example compare Email and ConfirmEmail properties
    RegularExpression	Validates if the provided value matches the pattern specified by the regular expression


Migrations

    from 2.1 and later version  we override OnModelCreating method for seed data.
    we can insert or seed data in appdbcontext.cs or we for clean purpose we can create new file and seed data through that file 
    by using model builder class  


    we can use migration to sync our database with our model properties for that we use   add-migration command.
    remove-migration remove latest migration if it is not updated in database (by using update-Databse)
    if latest migration is updated in database we have to revert changes for removing migration for that we use update-migration migrationName command 
    it revert upto specified migrationName and after that we will able to remove migration.