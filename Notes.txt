09/09/23 
--------

* Program Flow :
	
	Strat main
    above startup
    after startup
    Strat ConfigureServices
    End ConfigureServices
    configure start
    useendpoint start
    useendpoint end
    configure end
    info: Microsoft.Hosting.Lifetime[0]
          Now listening on: https://localhost:5001
    info: Microsoft.Hosting.Lifetime[0]
          Now listening on: http://localhost:5000
    info: Microsoft.Hosting.Lifetime[0]
          Application started. Press Ctrl+C to shut down.
    info: Microsoft.Hosting.Lifetime[0]
          Hosting environment: Development
    info: Microsoft.Hosting.Lifetime[0]
          Content root path: F:\AspDotNet\WebAppDemo4.0
    MockEmpRepository ctor start
    MockEmpRepository ctor end
    Homecontroller ctor start
    Homecontroller ctor end
    Details
    GetEmployee

* we return view from Details method in Home Controller at that movement when request is go to Details it try to 
  find  " View/Home(Because our Controller name is Home)/Details " and html file in that folder but not found hence it will give exception 

    An unhandled exception occurred while processing the request.
    InvalidOperationException: The view 'Details' was not found. The following locations were searched:
    /Views/Home/Details.cshtml
    /Views/Shared/Details.cshtml
    /Pages/Shared/Details.cshtml

* cshtml for cSharpHtml 

10/9/23
-------

* Customize Views : 
    return View("Test");
    return View("MtViews/Test.cshtml");
    return View("../../MtViews/Test");
    return View("../Test/Update");
    
* ViewData method to return model from controller
    it Did not give error messgae in compile time like spelling mistake in model name


11/09/23
--------

Layout View
instead of writing header parts in all files we create layout file eg . _Layout.cshtml( it usually starts with _ indicates not proper file to view)
and give below location as header

@{

    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Employees";
}

above code work as header and rest of the body work as  @RenderBody() in _layout file.

Cons:
but this will errutating in some cases when we hav to change the location of file we must reflect that change in all files.